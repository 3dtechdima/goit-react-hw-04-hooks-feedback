{"version":3,"sources":["Components/statistics/StatisticsStyles.js","Components/statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptionsStyles.js","Components/FeedbackOptions/FeedbackOptions.js","Components/section/SectionStyles.js","Components/section/Section.js","Components/notification/Notification.js","Components/AppStules.js","Components/App.js","index.js"],"names":["StatisticsContainer","styled","section","Statistics","props","good","neutral","bad","total","positivePercentage","FeedbackOptionsContainer","FeedbackOptions","options","onLeaveFeedback","lang","map","name","title","className","type","onClick","SectionContainer","Section","children","Notification","message","Main","optionsValue","App","useState","feedBack","setFeedBack","countTotalFeedback","result","Math","round","countPositiveFeedbackPercentage","e","target","prev","ReactDOM","render","document","getElementById"],"mappings":"+LAEaA,EAAsBC,IAAOC,QAAV,qD,OCuBjBC,EArBI,SAACC,GAClB,IAAQC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBACnC,OACE,eAACT,EAAD,WACE,uCAAUK,KACV,0CAAaC,KACb,sCAASC,KACT,uCAAUC,KACV,oDAAuBC,EAAvB,WCVOC,EAA2BT,IAAOC,QAAV,2JCoBtBS,EAnBS,SAACP,GACvB,IAAQQ,EAAmCR,EAAnCQ,QAASC,EAA0BT,EAA1BS,gBAA0BT,EAATU,KAElC,OAAOF,EAAQG,KAAI,YAAsB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC1B,OACE,cAACP,EAAD,UACE,wBACEQ,UAAU,MACVC,KAAK,SACLH,KAAMA,EACNI,QAASP,EAJX,SAMGI,KAP0BD,OCNxBK,EAAmBpB,IAAOC,QAAV,2JCUdoB,EATC,SAAC,GAAyB,IAAvBL,EAAsB,EAAtBA,MAAOM,EAAe,EAAfA,SACxB,OACE,eAACF,EAAD,WACE,6BAAKJ,IACJM,MCDQC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGP,UAAU,UAAb,SAAwBO,KCDpBC,EAAOzB,IAAOC,QAAV,4T,QCMXyB,EAAe,CACnB,CAAEX,KAAM,OAAQC,MAAO,QACvB,CAAED,KAAM,UAAWC,MAAO,WAC1B,CAAED,KAAM,MAAOC,MAAO,QAmDTW,EAhDH,WACV,MAAgCC,mBAAS,CAAExB,KAAM,EAAGC,QAAS,EAAGC,IAAK,IAArE,mBAAOuB,EAAP,KAAiBC,EAAjB,KAOMC,EAAqB,WACzB,IAAQ3B,EAAuByB,EAAvBzB,KAAMC,EAAiBwB,EAAjBxB,QAEd,OADcD,EADiByB,EAARvB,IACID,GAUvBE,EAAQwB,IACRvB,EAPkC,WACtC,IAAMD,EAAQwB,IACRC,EAASzB,EAAyB,IAAhBsB,EAASzB,KAAcG,EAAQ,EACvD,OAAO0B,KAAKC,MAAMF,GAIOG,GAC3B,OACE,eAACV,EAAD,WACE,cAAC,EAAD,CAAST,MAAM,wBAAf,SACE,cAAC,EAAD,CACEL,QAASe,EACTd,gBAxBe,SAACwB,GACtB,IAAQrB,EAASqB,EAAEC,OAAXtB,KACRe,GAAY,SAACQ,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBvB,EAAOuB,EAAKvB,GAAQ,YA0BrD,cAAC,EAAD,CAASC,MAAM,aAAf,SACGT,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMyB,EAASzB,KACfC,QAASwB,EAASxB,QAClBC,IAAKuB,EAASvB,IACdC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcS,UAAU,UAAUO,QAAQ,4B,MClDpDe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7ca2c27d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StatisticsContainer = styled.section`\r\n  padding-bottom: 50px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StatisticsContainer } from \"./StatisticsStyles\";\r\n\r\nconst Statistics = (props) => {\r\n  const { good, neutral, bad, total, positivePercentage } = props;\r\n  return (\r\n    <StatisticsContainer>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total:{total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </StatisticsContainer>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  goneutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FeedbackOptionsContainer = styled.section`\r\n  .btn {\r\n    text-transform: uppercase;\r\n    background-color: #fbff02c0;\r\n    border-radius: 5px;\r\n    color: #ff4800;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { FeedbackOptionsContainer } from \"./FeedbackOptionsStyles\";\r\n\r\nconst FeedbackOptions = (props) => {\r\n  const { options, onLeaveFeedback, lang } = props;\r\n\r\n  return options.map(({ name, title }) => {\r\n    return (\r\n      <FeedbackOptionsContainer key={name}>\r\n        <button\r\n          className=\"btn\"\r\n          type=\"button\"\r\n          name={name}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {title}\r\n        </button>\r\n      </FeedbackOptionsContainer>\r\n    );\r\n  });\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionContainer = styled.section`\r\n  text-align: center;\r\n\r\n  .selectLang {\r\n    background-color: #fbff02c0;\r\n    border-radius: 5px;\r\n    color: #ff4800;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SectionContainer } from \"./SectionStyles\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <SectionContainer>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </SectionContainer>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className=\"message\">{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.section`\r\n  color: #eeff00ca;\r\n  background-image: url(https://cs12.pikabu.ru/post_img/2021/05/19/8/1621427764178829599.jpg);\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  background-size: cover;\r\n  .message {\r\n    padding-bottom: 230px;\r\n  }\r\n`;\r\n","// import React, { Component } from \"react\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\r\nimport Section from \"./section/Section\";\r\nimport Notification from \"./notification/Notification\";\r\nimport { Main } from \"./AppStules\";\r\nimport { useState } from \"react/cjs/react.development\";\r\n\r\nconst optionsValue = [\r\n  { name: \"good\", title: \"Good\" },\r\n  { name: \"neutral\", title: \"Neutral\" },\r\n  { name: \"bad\", title: \"Bad\" },\r\n];\r\n\r\nconst App = () => {\r\n  const [feedBack, setFeedBack] = useState({ good: 0, neutral: 0, bad: 0 });\r\n\r\n  const handlePressBtn = (e) => {\r\n    const { name } = e.target;\r\n    setFeedBack((prev) => ({ ...prev, [name]: prev[name] + 1 }));\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    const { good, neutral, bad } = feedBack;\r\n    const total = good + bad + neutral;\r\n    return total;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const total = countTotalFeedback();\r\n    const result = total ? (feedBack.good * 100) / total : 0;\r\n    return Math.round(result);\r\n  };\r\n\r\n  const total = countTotalFeedback();\r\n  const positivePercentage = countPositiveFeedbackPercentage();\r\n  return (\r\n    <Main>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={optionsValue}\r\n          onLeaveFeedback={handlePressBtn}\r\n        />\r\n      </Section>\r\n\r\n      <Section title=\"Statistics\">\r\n        {total > 0 ? (\r\n          <Statistics\r\n            good={feedBack.good}\r\n            neutral={feedBack.neutral}\r\n            bad={feedBack.bad}\r\n            total={total}\r\n            positivePercentage={positivePercentage}\r\n          />\r\n        ) : (\r\n          <Notification className=\"message\" message=\"No feedback given\" />\r\n        )}\r\n      </Section>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}