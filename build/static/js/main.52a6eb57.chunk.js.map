{"version":3,"sources":["Components/statistics/StatisticsStyles.js","Components/statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptionsStyles.js","Components/FeedbackOptions/FeedbackOptions.js","Components/section/SectionStyles.js","Components/section/Section.js","Components/notification/Notification.js","Components/AppStules.js","Components/App.js","index.js"],"names":["StatisticsContainer","styled","section","Statistics","props","good","neutral","bad","total","positivePercentage","FeedbackOptionsContainer","FeedbackOptions","options","onLeaveFeedback","lang","map","name","title","className","type","onClick","SectionContainer","Section","children","Notification","message","Main","optionsValue","en","ru","App","state","errorType","handleSelectLang","e","target","value","console","log","setState","handlePressBtn","prevStat","countTotalFeedback","countPositiveFeedbackPercentage","result","Math","round","this","onChange","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52a6eb57.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StatisticsContainer = styled.section`\r\n  padding-bottom: 50px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StatisticsContainer } from \"./StatisticsStyles\";\r\n\r\nconst Statistics = (props) => {\r\n  const { good, neutral, bad, total, positivePercentage } = props;\r\n  return (\r\n    <StatisticsContainer>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total:{total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </StatisticsContainer>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  goneutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FeedbackOptionsContainer = styled.section`\r\n  .btn {\r\n    text-transform: uppercase;\r\n    background-color: #fbff02c0;\r\n    border-radius: 5px;\r\n    color: #ff4800;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { FeedbackOptionsContainer } from \"./FeedbackOptionsStyles\";\r\n\r\nconst FeedbackOptions = (props) => {\r\n  const { options, onLeaveFeedback, lang } = props;\r\n\r\n  return options.map(({ name, title }) => {\r\n    return (\r\n      <FeedbackOptionsContainer>\r\n        <button\r\n          className=\"btn\"\r\n          key={name}\r\n          type=\"button\"\r\n          name={name}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {title[lang]}\r\n        </button>\r\n      </FeedbackOptionsContainer>\r\n    );\r\n  });\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionContainer = styled.section`\r\n  text-align: center;\r\n\r\n  .selectLang {\r\n    background-color: #fbff02c0;\r\n    border-radius: 5px;\r\n    color: #ff4800;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SectionContainer } from \"./SectionStyles\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  // console.log(props);\r\n  // console.log(children[0]);\r\n  // const { good, neutral, bad, total, positivePercentage } = props;\r\n  return (\r\n    <SectionContainer>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </SectionContainer>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className=\"message\">{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.section`\r\n  color: #eeff00ca;\r\n  background-image: url(https://cs12.pikabu.ru/post_img/2021/05/19/8/1621427764178829599.jpg);\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  background-size: cover;\r\n  .message {\r\n    padding-bottom: 230px;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\r\nimport Section from \"./section/Section\";\r\nimport Notification from \"./notification/Notification\";\r\nimport { Main } from \"./AppStules\";\r\n\r\nconst optionsValue = [\r\n  { name: \"good\", title: { en: \"Good\", ru: \"Хорошо\" } },\r\n  { name: \"neutral\", title: { en: \"Neutral\", ru: \"Нейтрально\" } },\r\n  { name: \"bad\", title: { en: \"Bad\", ru: \"Плохо\" } },\r\n];\r\n\r\n// const errorOptions = {\r\n//   warning: { message: \"warning\", className: \"warning\" },\r\n//   error: { message: \"error\", className: \"error\" },\r\n// };\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    lang: \"en\",\r\n    errorType: \"warning\",\r\n  };\r\n\r\n  handleSelectLang = (e) => {\r\n    const { value, name } = e.target;\r\n    console.log(e);\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handlePressBtn = (e) => {\r\n    const { name } = e.target;\r\n    this.setState((prevStat) => ({\r\n      [name]: prevStat[name] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + bad + neutral;\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    const result = total ? (this.state.good * 100) / total : 0;\r\n    return Math.round(result);\r\n  };\r\n\r\n  render() {\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n    return (\r\n      <Main>\r\n        <Section title=\"Language\">\r\n          <select\r\n            className=\"selectLang\"\r\n            onChange={this.handleSelectLang}\r\n            name=\"lang\"\r\n          >\r\n            <option value=\"en\">en</option>\r\n            <option value=\"ru\">ru</option>\r\n          </select>\r\n        </Section>\r\n\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={optionsValue}\r\n            onLeaveFeedback={this.handlePressBtn}\r\n            lang={this.state.lang}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {total > 0 ? (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          ) : (\r\n            <Notification className=\"message\" message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </Main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}